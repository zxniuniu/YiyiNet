{
  "name": "YiyiNet",
  "version": "1.6.9",
  "productName": "YiyiNet",
  "description": "依网, YiyiNet, 定时任务, 自动签到, 自动任务, 任务管理",
  "about": "依网(YiyiNet)：自动任务执行，如自动签到，自动浏览等",
  "author": "zxniuniu <bluefuxianwu@gmail.com>",
  "repository": {
    "url": "https://github.com/zxniuniu/YiyiNet"
  },
  "main": "./dist/main.js",
  "scripts": {
    "dev": "chcp 65001 && npm run build-main-dev && electron . --debug --inspect=8888",
    "start": "chcp 65001 && npm run build-main-dev && xcopy .\\dist D:\\YiyiNet\\resources\\app\\dist /E /Y && D:\\YiyiNet\\YiyiNet.exe",
    "delete": "rmdir /S /Q node_modules",
    "rebuild": "electron-rebuild",
    "postinstall": "electron-builder install-app-deps",
    "nodeOption": "cross-env NODE_OPTIONS='--max-old-space-size=819200' && cross-env USE_HARD_LINKS=true",
    "obfuscator": "javascript-obfuscator app/main.js -o app/main.min.js",
    "pack": "npm run nodeOption && electron-builder --dir",
    "pack:mac": "npm run nodeOption && electron-builder --mac",
    "pack:linux": "npm run nodeOption && npm run build:main && electron-builder --linux --publish never",
    "pack:win:web": "npm run nodeOption && npm run build:main && electron-builder --windows --publish never",
    "pack:win:x64": "npm run nodeOption && npm run build:main && npm run build-main-dev && electron-builder --windows --x64 -c.win.target.target=nsis -c.win.target.arch=x64 --publish never",
    "pack:win:ia32": "npm run nodeOption && npm run build:main && electron-builder --windows --ia32 -c.win.target.target=nsis -c.win.target.arch=ia32 --publish never",
    "pack:win": "npm-run-all pack:win:web",
    "pack:all": "npm-run-all pack:*",
    "publish:win:x64": "npm run nodeOption && npm run build:main && electron-builder --windows --x64 --prepackaged=./dist/win-unpacked -c.win.target.target=nsis -c.win.target.arch=x64 --publish always",
    "publish:win:ia32": "npm run nodeOption && npm run build:main && electron-builder --windows --ia32 --prepackaged=./dist/win-ia32-unpacked -c.win.target.target=nsis -c.win.target.arch=ia32 --publish always",
    "publish:win:web": "npm run nodeOption && npm run build:main && electron-builder --windows --publish always",
    "publish:win": "npm-run-all publish:win:web",
    "publish": "npm run nodeOption && npm run build:main && electron-builder --publish always",
    "bundle": "browserify --ignore-missing --no-builtins --no-commondir --insert-global-vars=\"global\" --no-browser-field main.js | uglifyjs -c > main.bundle.js",
    "build": "run-s build:*",
    "build:main": "cross-env NODE_ENV=production parcel build --target node --public-url . --out-dir ./dist --out-file main.js ./app/main.js",
    "build-main-dev": "cross-env NODE_ENV=development parcel build --target node --out-dir ./dist --out-file main.js ./app/main.js",
    "build:renderer": "cross-env NODE_ENV=production parcel build --no-content-hash --out-dir ./dist --target electron --public-url . ./app/renderer/index.html",
    "build-renderer-dev": "cross-env NODE_ENV=development parcel build --out-dir ./dist --target electron --public-url . ./app/renderer/index.html"
  },
  "keywords": [
    "YiyiNet"
  ],
  "license": "MIT",
  "homepage": "https://fuyiyi.imdo.co",
  "dependencies": {
    "@trodi/electron-splashscreen": "^1.0.0",
    "async": "^3.2.0",
    "async-lock": "^1.2.4",
    "async-wait-until": "^1.2.6",
    "electron-better-ipc": "^1.1.1",
    "electron-context-menu": "^2.2.0",
    "electron-log": "^4.2.4",
    "electron-store": "^6.0.0",
    "electron-unhandled": "^3.0.2",
    "electron-updater": "^4.3.1",
    "electron-util": "^0.14.2",
    "electron-window-state": "^5.0.3",
    "fix-path": "^3.0.0",
    "i18next": "^19.6.3",
    "i18next-node-fs-backend": "^2.1.3",
    "live-plugin-manager": "^0.15.0",
    "node-stream-zip": "^1.11.2",
    "shell-env": "^3.0.0",
    "unzip-crx": "^0.2.0"
  },
  "devDependencies": {
    "@cliqz/adblocker-electron": "^1.17.0",
    "appium": "^1.18.0",
    "axios": "^0.20.0",
    "bluebird": "^3.7.2",
    "cheerio": "^1.0.0-rc.3",
    "crawler": "^1.2.2",
    "cross-env": "^7.0.2",
    "crypto-js": "^4.0.0",
    "electron": "^9.2.1",
    "electron-builder": "^22.7.0",
    "electron-rebuild": "^1.11.0",
    "got": "^11.5.2",
    "hostile": "^1.3.2",
    "is-reachable": "^4.0.0",
    "lodash": "^4.17.19",
    "mathjs": "^7.1.0",
    "node-downloader-helper": "^1.0.13",
    "npm-run-all": "^4.1.5",
    "parcel-bundler": "^1.12.4",
    "porthog": "^1.0.1",
    "puppeteer-core": "^5.2.1",
    "python-shell": "^2.0.1",
    "ramda": "^0.27.1",
    "request": "^2.88.2",
    "request-promise": "^4.2.6",
    "superagent": "^5.3.1"
  },
  "dependenciesContainsOthers": {
    "@trodi/electron-splashscreen": "",
    "async": "",
    "async-lock": "",
    "async-wait-until": "",
    "electron-better-ipc": "serialize-error",
    "electron-context-menu": "cli-truncate, electron-dl(ext-name, pupa, unused-filename), electron-is-dev",
    "electron-log": "",
    "electron-store": "conf, type-fest",
    "electron-unhandled": "clean-stack, electron-is-dev, ensure-error, lodash.debounce",
    "electron-updater": "@types/semver, js-yaml, lazy-val, lodash.isequal, semver",
    "electron-util": "electron-is-dev, new-github-issue-url",
    "electron-window-state": "jsonfile, mkdirp",
    "fix-path": "shell-path",
    "i18next": "@babel/runtime",
    "i18next-node-fs-backend": "",
    "live-plugin-manager": "@types/debug, @types/lockfile, @types/node-fetch, @types/semver, @types/tar, @types/url-join, lockfile, node-fetch, url-join",
    "node-stream-zip": "",
    "shell-env": "default-shell, execa",
    "unzip-crx": "jszip, mkdirp, yaku",
    "": "",
    "@cliqz/adblocker-electron": "@cliqz/adblocker, @cliqz/adblocker-electron-preload, tldts-experimental",
    "axios": "follow-redirects",
    "bluebird": "",
    "cheerio": "css-select, dom-serializer, entities, htmlparser2, lodash, parse5",
    "crawler": "bottleneckp, cheerio, iconv-lite, lodash, request, seenreq, type-is",
    "crypto-js": "",
    "got": "@sindresorhus/is, @szmarczak/http-timer, @types/cacheable-request, @types/responselike, cacheable-lookup, cacheable-request, decompress-response, http2-wrapper, lowercase-keys, p-cancelable, responselike",
    "hostile": "chalk, minimist, once, split, through",
    "is-reachable": "arrify, got, is-port-reachable, p-any, p-timeout, prepend-http, router-ips, url-parse",
    "mathjs": "complex.js, decimal.js, escape-latex, fraction.js, javascript-natural-sort, seed-random, tiny-emitter, typed-function",
    "lodash": "",
    "node-downloader-helper": "",
    "porthog": "",
    "puppeteer-core": "debug, devtools-protocol, extract-zip, https-proxy-agent, mime, pkg-dir, progress, proxy-from-env, rimraf, tar-fs, unbzip2-stream, ws",
    "ramda": "",
    "python-shell": "",
    "request": "aws-sign2, aws4, caseless, combined-stream, extend, forever-agent, form-data, har-validator, http-signature, is-typedarray, isstream, json-stringify-safe, mime-types, oauth-sign, performance-now, qs, safe-buffer, tough-cookie, tunnel-agent, uuid",
    "request-promise": "request-promise-core, bluebird, stealthy-require, tough-cookie",
    "superagent": "component-emitter, cookiejar, debug, fast-safe-stringify, form-data, formidable, methods, mime, qs, readable-stream, semver",
    "appium": "@babel/runtime, appium-android-driver, appium-base-driver, appium-espresso-driver, appium-fake-driver, appium-flutter-driver, appium-ios-driver, appium-mac-driver, appium-support, appium-tizen-driver, appium-uiautomator2-driver, appium-windows-driver, appium-xcuitest-driver, appium-youiengine-driver, argparse, async-lock, asyncbox, axios, bluebird, continuation-local-storage, dateformat, find-root, lodash, longjohn, npmlog, semver, source-map-support, teen_process, winston, word-wrap"
  },
  "build": {
    "appId": "zxniuniu.yiyinet",
    "copyright": "Copyright © 2020",
    "afterPack": "./build/afterPack.js",
    "directories": {
      "output": "release",
      "buildResources": "build"
    },
    "files": [
      "dist/",
      "assets/",
      "package.json"
    ],
    "extraFiles": [
      "dll_backup/"
    ],
    "extraResources": [
      "res_backup"
    ],
    "asar": false,
    "asarUnpack": [
      "./node_modules/**/*"
    ],
    "win": {
      "icon": "./assets/icon/app.ico",
      "target": {
        "target": "nsis-web",
        "arch": [
          "x64",
          "ia32"
        ]
      },
      "requestedExecutionLevel": "requireAdministrator"
    },
    "mac": {
      "icon": "./assets/icon/app.icns",
      "category": "your.app.category.type",
      "target": [
        "zip",
        "dmg"
      ]
    },
    "linux": {
      "icon": "./assets/icon/app.png"
    },
    "nsis": {
      "oneClick": false,
      "perMachine": false,
      "allowElevation": true,
      "allowToChangeInstallationDirectory": true,
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true,
      "menuCategory": false
    },
    "nsisWeb": {
      "oneClick": false,
      "perMachine": false,
      "allowElevation": true,
      "allowToChangeInstallationDirectory": true,
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true,
      "menuCategory": false
    },
    "buildDependenciesFromSource": true,
    "npmRebuild": true,
    "electronDownload": {
      "mirror": "http://npm.taobao.org/mirrors/electron/"
    },
    "publish": {
      "provider": "github"
    }
  }
}
